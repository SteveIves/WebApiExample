<?xml version='1.0'?>
<!--Generated by xmldoc v10.3.3c on 05 MAY 2017 14:00:50-->
<doc>
  <assembly>
    <name>WebApiServices</name>
  </assembly>
  <members>
    <member name="T:WebApiServices.Controllers.DepartmentController">
       <summary>
       A Web API Controller exposing CRUD functionality for the Department master.
       </summary>
    </member>
    <member name="M:WebApiServices.Controllers.DepartmentController.GetAll">
       <summary>
       Retrieve all departments.
       </summary>
       <returns>A collection of all departments.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.DepartmentController.Get(System.String)">
       <summary>
       Retrieve a specific department by ID.
       </summary>
       <param name="aId">Department ID.</param>
       <returns>Returns a Department object.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.DepartmentController.GetByMANAGER(System.Int32)">
       <summary>
       Retrieve all departments by MANAGER.
       </summary>
       <param name="aManager">Department manager.</param>
       <returns>Returns departments by MANAGER.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.DepartmentController.Post(WebApiServices.Models.Department)">
       <summary>
       Create a new department.
       </summary>
       <param name="departmentObj">Department to create.</param>
       <returns>Returns an HttpResponseMessage indicating the status of the operation and, on success, containing a URL that can be used to retrieve the Department object.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.DepartmentController.Put(System.String,WebApiServices.Models.Department)">
       <summary>
       Update an existing department.
       </summary>
       <param name="aId">Department ID.</param>
       <param name="departmentObj">Department to update.</param>
       <returns>Returns an HttpResponseMessage indicating the status of the operation.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.DepartmentController.Delete(System.String)">
       <summary>
       Delete a department.
       </summary>
       <param name="aId">Department ID.</param>
       <returns>Returns an HttpResponseMessage indicating the status of the operation.</returns>
    </member>
    <member name="T:WebApiServices.Controllers.EmployeeController">
       <summary>
       A Web API Controller exposing CRUD functionality for the Employee master.
       </summary>
    </member>
    <member name="M:WebApiServices.Controllers.EmployeeController.GetAll">
       <summary>
       Retrieve all employees.
       </summary>
       <returns>A collection of all employees.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.EmployeeController.Get(System.Int32)">
       <summary>
       Retrieve a specific employee by ID.
       </summary>
       <param name="aId">Employee ID.</param>
       <returns>Returns a Employee object.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.EmployeeController.GetByDEPARTMENT(System.String)">
       <summary>
       Retrieve all employees by DEPARTMENT.
       </summary>
       <param name="aDepartment">Employee&apos;s department ID.</param>
       <returns>Returns employees by DEPARTMENT.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.EmployeeController.GetByLAST_NAME(System.String)">
       <summary>
       Retrieve all employees by LAST_NAME.
       </summary>
       <param name="aLastName">Last name.</param>
       <returns>Returns employees by LAST_NAME.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.EmployeeController.GetBySTATE(System.String)">
       <summary>
       Retrieve all employees by STATE.
       </summary>
       <param name="aState">State.</param>
       <returns>Returns employees by STATE.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.EmployeeController.GetByZIP(System.Int32)">
       <summary>
       Retrieve all employees by ZIP.
       </summary>
       <param name="aZip">Zip code.</param>
       <returns>Returns employees by ZIP.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.EmployeeController.Post(WebApiServices.Models.Employee)">
       <summary>
       Create a new employee.
       </summary>
       <param name="employeeObj">Employee to create.</param>
       <returns>Returns an HttpResponseMessage indicating the status of the operation and, on success, containing a URL that can be used to retrieve the Employee object.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.EmployeeController.Put(System.Int32,WebApiServices.Models.Employee)">
       <summary>
       Update an existing employee.
       </summary>
       <param name="aId">Employee ID.</param>
       <param name="employeeObj">Employee to update.</param>
       <returns>Returns an HttpResponseMessage indicating the status of the operation.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.EmployeeController.Delete(System.Int32)">
       <summary>
       Delete a employee.
       </summary>
       <param name="aId">Employee ID.</param>
       <returns>Returns an HttpResponseMessage indicating the status of the operation.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.EmployeeController.GetBornBeforeYear(System.Int32)">
       <summary>
       Retrieve all employees born before a specified year.
       </summary>
       <param name="year">Year born before.</param>
       <returns>Returns a collection of employees.</returns>
    </member>
    <member name="T:WebApiServices.Controllers.PeopleController">
       <summary>
       Exposes actions relative to a collection of people.
       </summary>
    </member>
    <member name="M:WebApiServices.Controllers.PeopleController.Get">
       <summary>
       Get all people.
       </summary>
       <returns>A collection of all people.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.PeopleController.Get(System.Int32)">
       <summary>
       Get a specific person by ID.
       </summary>
       <returns>A a specific person.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.PeopleController.Post(WebApiServices.Models.Person)">
        <summary>
        Create a new person.
        </summary>
        <param name="newPerson">The person to be created. </param>
       <returns>HTTP 201 Created. Refer to the Location response header for the URI of the created person.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.PeopleController.Put(System.Int32,WebApiServices.Models.Person)">
       <summary>
       Update a person.
       </summary>
       <param name="id">The ID of the person to update.</param>
       <param name="updatedPerson">The new person data to be saved.</param>
       <returns>HTTP 204 No Content on success or HTTP 404 Not Found.</returns>
    </member>
    <member name="M:WebApiServices.Controllers.PeopleController.Delete(System.Int32)">
       <summary>
       Delete a person.
       </summary>
       <param name="id">The ID of the person to delete.</param>
    </member>
    <member name="T:WebApiServices.Controllers.ValuesController">
        <summary>
        Exposes information about values
        </summary>
    </member>
    <member name="M:WebApiServices.Controllers.ValuesController.Get">
        <summary>
        Get all values
        </summary>
        <returns>Returns a collection of all values</returns>
    </member>
    <member name="M:WebApiServices.Controllers.ValuesController.Get(System.Int32)">
        <summary>
        Returns a specific value, by id
        </summary>
        <param name="id">The id of the value to get</param>
        <returns>Returns a single value</returns>
    </member>
    <member name="M:WebApiServices.Controllers.ValuesController.Post(System.String)">
        <summary>
        Creates a new value
        </summary>
        <param name="value">The new value to create</param>
    </member>
    <member name="M:WebApiServices.Controllers.ValuesController.Put(System.Int32,System.String)">
        <summary>
        Updates an existing value by id
        </summary>
        <param name="id">The id of the value to be updated</param>
        <param name="value">The new value</param>
    </member>
    <member name="M:WebApiServices.Controllers.ValuesController.Delete(System.Int32)">
        <summary>
        Deletes a value by id
        </summary>
        <param name="id">The id of the value to be deleted</param>
    </member>
    <member name="T:WebApiServices.Models.Department">
       <summary>
       Department master
       </summary>
    </member>
    <member name="M:WebApiServices.Models.Department.#ctor">
       <summary>
       Construct an empty Department object
       </summary>
    </member>
    <member name="M:WebApiServices.Models.Department.#ctor(WebApiServices.Models.strDepartment)">
       <summary>
       Construct a Department object from a Department master record
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Department.Id">
       <summary>
       Department ID
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Department.Name">
       <summary>
       Department name
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Department.Manager">
       <summary>
       Department manager
       </summary>
    </member>
    <member name="M:WebApiServices.Models.Department.ToRecord">
       <summary>
       Return the data as a Department master record
       </summary>
    </member>
    <member name="T:WebApiServices.Models.DepartmentRepository">
       <summary>
       Data repository for the Department master file (DAT:department.ism)
       </summary>
    </member>
    <member name="M:WebApiServices.Models.DepartmentRepository.ReadAll(System.Collections.Generic.List{Department})">
       <summary>
       Read all records.
       </summary>
       <param name="results">Returned collection of records.</param>
       <returns>RepositoryResult.Success or RepositoryResult.NotFound</returns>
    </member>
    <member name="M:WebApiServices.Models.DepartmentRepository.Read(System.String,WebApiServices.Models.Department)">
       <summary>
       Read a specific record by primary key.
       </summary>
       <param name="aId">Department ID</param>
       <param name="aDepartment">Returned data object.</param>
       <returns>RepositoryResult.Success or RepositoryResult.NotFound</returns>
    </member>
    <member name="M:WebApiServices.Models.DepartmentRepository.ReadByMANAGER(System.Int32,System.Collections.Generic.List{Department})">
       <summary>
       Retrieve all departments by MANAGER.
       </summary>
       <param name="aManager">Department manager.</param>
       <param name="results">Returned collection of records.</param>
       <returns>RepositoryResult.Success or RepositoryResult.NotFound</returns>
    </member>
    <member name="M:WebApiServices.Models.DepartmentRepository.Create(WebApiServices.Models.Department)">
       <summary>
       Create a new record.
       </summary>
       <param name="departmentObj">Department master.</param>
       <returns>RepositoryResult.Success, RepositoryResult.Exists or RepositoryResult.DuplicateKey</returns>
    </member>
    <member name="M:WebApiServices.Models.DepartmentRepository.Update(WebApiServices.Models.Department)">
       <summary>
       Update an existing record.
       </summary>
       <param name="departmentObj">Department master.</param>
       <returns>RepositoryResult.Success, RepositoryResult.NotFound, RepositoryResult.DuplicateKey or RepositoryResult.KeyChange</returns>
    </member>
    <member name="M:WebApiServices.Models.DepartmentRepository.Delete(System.String)">
       <summary>
       Delete a record.
       </summary>
       <param name="aId">Department ID</param>
       <returns>RepositoryResult.Success or RepositoryResult.NotFound</returns>
    </member>
    <member name="T:WebApiServices.Models.Employee">
       <summary>
       Employee master
       </summary>
    </member>
    <member name="M:WebApiServices.Models.Employee.#ctor">
       <summary>
       Construct an empty Employee object
       </summary>
    </member>
    <member name="M:WebApiServices.Models.Employee.#ctor(WebApiServices.Models.strEmployee)">
       <summary>
       Construct a Employee object from a Employee master record
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.Id">
       <summary>
       Employee ID
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.FirstName">
       <summary>
       First name
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.LastName">
       <summary>
       Last name
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.Department">
       <summary>
       Employee&apos;s department ID
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.HireDate">
       <summary>
       Date hired
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.PhoneWork">
       <summary>
       Work phone number
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.PhoneHome">
       <summary>
       Home phone number
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.PhoneCell">
       <summary>
       Cell phone number
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.Paid">
       <summary>
       Employee pay method
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.PhoneHomeOk">
       <summary>
       OK to call at home
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.DateOfBirth">
       <summary>
       Date of birth
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.HireTime">
       <summary>
       Hire time
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.Email">
       <summary>
       Email address
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.Street">
       <summary>
       Street address
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.City">
       <summary>
       City
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.State">
       <summary>
       State
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Employee.Zip">
       <summary>
       Zip code
       </summary>
    </member>
    <member name="M:WebApiServices.Models.Employee.ToRecord">
       <summary>
       Return the data as a Employee master record
       </summary>
    </member>
    <member name="T:WebApiServices.Models.EmployeeRepository">
       <summary>
       Data repository for the Employee master file (DAT:employee.ism)
       </summary>
    </member>
    <member name="M:WebApiServices.Models.EmployeeRepository.ReadAll(System.Collections.Generic.List{Employee})">
       <summary>
       Read all records.
       </summary>
       <param name="results">Returned collection of records.</param>
       <returns>RepositoryResult.Success or RepositoryResult.NotFound</returns>
    </member>
    <member name="M:WebApiServices.Models.EmployeeRepository.Read(System.Int32,WebApiServices.Models.Employee)">
       <summary>
       Read a specific record by primary key.
       </summary>
       <param name="aId">Employee ID</param>
       <param name="aEmployee">Returned data object.</param>
       <returns>RepositoryResult.Success or RepositoryResult.NotFound</returns>
    </member>
    <member name="M:WebApiServices.Models.EmployeeRepository.ReadByDEPARTMENT(System.String,System.Collections.Generic.List{Employee})">
       <summary>
       Retrieve all employees by DEPARTMENT.
       </summary>
       <param name="aDepartment">Employee&apos;s department ID.</param>
       <param name="results">Returned collection of records.</param>
       <returns>RepositoryResult.Success or RepositoryResult.NotFound</returns>
    </member>
    <member name="M:WebApiServices.Models.EmployeeRepository.ReadByLAST_NAME(System.String,System.Collections.Generic.List{Employee})">
       <summary>
       Retrieve all employees by LAST_NAME.
       </summary>
       <param name="aLastName">Last name.</param>
       <param name="results">Returned collection of records.</param>
       <returns>RepositoryResult.Success or RepositoryResult.NotFound</returns>
    </member>
    <member name="M:WebApiServices.Models.EmployeeRepository.ReadBySTATE(System.String,System.Collections.Generic.List{Employee})">
       <summary>
       Retrieve all employees by STATE.
       </summary>
       <param name="aState">State.</param>
       <param name="results">Returned collection of records.</param>
       <returns>RepositoryResult.Success or RepositoryResult.NotFound</returns>
    </member>
    <member name="M:WebApiServices.Models.EmployeeRepository.ReadByZIP(System.Int32,System.Collections.Generic.List{Employee})">
       <summary>
       Retrieve all employees by ZIP.
       </summary>
       <param name="aZip">Zip code.</param>
       <param name="results">Returned collection of records.</param>
       <returns>RepositoryResult.Success or RepositoryResult.NotFound</returns>
    </member>
    <member name="M:WebApiServices.Models.EmployeeRepository.Create(WebApiServices.Models.Employee)">
       <summary>
       Create a new record.
       </summary>
       <param name="employeeObj">Employee master.</param>
       <returns>RepositoryResult.Success, RepositoryResult.Exists or RepositoryResult.DuplicateKey</returns>
    </member>
    <member name="M:WebApiServices.Models.EmployeeRepository.Update(WebApiServices.Models.Employee)">
       <summary>
       Update an existing record.
       </summary>
       <param name="employeeObj">Employee master.</param>
       <returns>RepositoryResult.Success, RepositoryResult.NotFound, RepositoryResult.DuplicateKey or RepositoryResult.KeyChange</returns>
    </member>
    <member name="M:WebApiServices.Models.EmployeeRepository.Delete(System.Int32)">
       <summary>
       Delete a record.
       </summary>
       <param name="aId">Employee ID</param>
       <returns>RepositoryResult.Success or RepositoryResult.NotFound</returns>
    </member>
    <member name="T:WebApiServices.Models.Person">
       <summary>
       Represents a person
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Person.ID">
       <summary>
       Person ID
       </summary>	
    </member>
    <member name="P:WebApiServices.Models.Person.FirstName">
       <summary>
       First name
       </summary>
    </member>
    <member name="P:WebApiServices.Models.Person.LastName">
       <summary>
       Last name
       </summary>
    </member>
    <member name="T:WebApiServices.UnityResolver">
       <summary>
       Implements a Unity IoC dependency resolver
       </summary>
    </member>
    <member name="M:WebApiServices.UnityResolver.#ctor(Microsoft.Practices.Unity.IUnityContainer)">
       <summary>
       
       </summary>
       <param name="container"></param>
    </member>
    <member name="M:WebApiServices.UnityResolver.GetService(System.Type)">
       <summary>
       
       </summary>
       <param name="serviceType"></param>
       <returns></returns>
    </member>
    <member name="M:WebApiServices.UnityResolver.GetServices(System.Type)">
       <summary>
       
       </summary>
       <param name="serviceType"></param>
       <returns></returns>
    </member>
    <member name="M:WebApiServices.UnityResolver.BeginScope">
       <summary>
       
       </summary>
       <returns></returns>
    </member>
    <member name="M:WebApiServices.UnityResolver.Dispose">
       <summary>
       IDisposable support
       </summary>
    </member>
  </members>
</doc>
